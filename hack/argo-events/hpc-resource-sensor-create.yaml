apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: hpc-create
  namespace: argo-events
spec:
  template:
    serviceAccountName: default
  dependencies:
    - name: test-dep
      eventSourceName: hpc-event-source
      eventName: add
  triggers:
    - template:
        name: argo-workflow
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                namespace: default
                generateName: hpc-create-
                labels:
                  app: resource-workflow
              spec:
                entrypoint: whalesay
                arguments:
                  parameters:
                  - name: cluster
                    # the value will get overridden by the event payload from test-dep
                    value: ""
                  - name: config
                    # the value will get overridden by the event payload from test-dep
                    value: ""
                templates:
                - name: whalesay
                  inputs:
                    parameters:
                    - name: cluster
                    - name: config
                  script:
                    image: public.ecr.aws/parallelcluster/pcluster-api:3.7.1
                    command: [bash]
                    source: |
                      export HPC_CLUSTER_NAME="{{inputs.parameters.cluster}}"
                      echo "HPC_CLUSTER_NAME=$HPC_CLUSTER_NAME"
                      echo -e "{{inputs.parameters.config}}" > config.yaml
                      cat config.yaml
                      pcluster version
                      #env
                      #pcluster list-clusters
                      pcluster create-cluster --cluster-configuration config.yaml --cluster-name $HPC_CLUSTER_NAME
                    envFrom:
                    - secretRef:
                        name: aws-creds
          parameters:
            - src:
                dependencyName: test-dep
                dataTemplate: "{{ .Input.body.data.cluster }}"
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: test-dep
                dataTemplate: "{{ .Input.body.data.config }}"
              dest: spec.arguments.parameters.1.value
      retryStrategy:
        steps: 3